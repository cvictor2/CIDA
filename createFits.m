function [fitresult, gof] = createFits(nu_nodes, all_min_nodes)
%CREATEFITS(NU_NODES,ALL_MIN_NODES)
%  Create fits.
%
%  Data for 'Uniform Exp 2-term' fit:
%      X Input : nu_nodes
%      Y Output: all_min_nodes
%  Data for 'Uniform Exp 1-term' fit:
%      X Input : nu_nodes
%      Y Output: all_min_nodes
%  Data for 'Uniform Weibull' fit:
%      X Input : nu_nodes
%      Y Output: all_min_nodes
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 15-Sep-2018 21:40:43

%% Initialization.
load('C:\Users\colli\Desktop\MATLAB\UCARE\CIDA\Results\2018.07.14.07.22.03_Uniform_Trials_type=uniform_alpha=1_mu=300_finished.mat')
% 
% Initialize arrays to store fits and goodness-of-fit.
% % fitresult = cell( 3, 1 );
% % gof = struct( 'sse', cell( 3, 1 ), ...
% %     'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );
% % 
% % %% Fit: 'Uniform Exp 2-term'.
% % [xData, yData] = prepareCurveData( nu_nodes, all_min_nodes );
% % 
% % % Set up fittype and options.
% % ft = fittype( 'exp2' );
% % opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% % opts.Display = 'Off';
% % opts.StartPoint = [45.9836730173842 -331.708403745814 0 -331.708403745815];
% % 
% % % Fit model to data.
% % [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
% % 
% % % Plot fit with data.
% % % figure( 'Name', 'Uniform Exp 2-term' );
% % h = plot( fitresult{1}, 'predobs' );
% % % set(gca, 'yscale','log');
% % % set(gca, 'xscale','log');
% % % legend( h, 'all_min_nodes vs. nu_nodes', 'Uniform Exp 2-term', 'Lower bounds (Uniform Exp 2-term)', 'Upper bounds (Uniform Exp 2-term)', 'Location', 'NorthEast' );
% % % Label axes
% % % xlabel nu_nodes
% % % ylabel all_min_nodes
% % % grid on
% % 
% % % Fit: 'Uniform Exp 1-term'.
% % [xData, yData] = prepareCurveData( nu_nodes, all_min_nodes );
% % 
% % Set up fittype and options.
% % ft = fittype( 'exp1' );
% % opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% % opts.Display = 'Off';
% % opts.StartPoint = [43.3393671261542 -354.890699845436];
% % 
% % Fit model to data.
% % [fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );
% % 
% % Plot fit with data.
% % figure( 'Name', 'Uniform Exp 1-term' );
% % h = plot( fitresult{2}, 'predobs' );
% % legend( h, 'all_min_nodes vs. nu_nodes', 'Uniform Exp 1-term', 'Lower bounds (Uniform Exp 1-term)', 'Upper bounds (Uniform Exp 1-term)', 'Location', 'NorthEast' );
% % Label axes
% % xlabel nu_nodes
% % ylabel all_min_nodes
% % grid on
% % 
% % 
% % 
% % %% Fit: 'Uniform Weibull'.
% % [xData, yData] = prepareCurveData( nu_nodes, all_min_nodes );
% % 
% % % Set up fittype and options.
% % ft = fittype( 'weibull' );
% % opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% % opts.Display = 'Off';
% % opts.Lower = [0 0];
% % opts.StartPoint = [0.53405180999582 0.917480379198556];
% % 
% % % Fit model to data.
% % [fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );
% % 
% % % Plot fit with data.
% % % figure( 'Name', 'Uniform Weibull' );
% % h = plot( fitresult{3}, 'predobs', 0.99 );
% % % legend( h, 'all_min_nodes vs. nu_nodes', 'Uniform Weibull', 'Lower bounds (Uniform Weibull)', 'Upper bounds (Uniform Weibull)', 'Location', 'NorthEast' );
% % % Label axes
% % % xlabel nu_nodes
% % % ylabel all_min_nodes
% % % grid on



%% Fit: 'Power Fit'.
[xData, yData] = prepareCurveData( nu_nodes, all_min_nodes );

% Set up fittype and options.
ft = fittype( 'power1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.489461186254275 -0.451935352674379];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'Power Fit' );
h = plot( fitresult, 'predobs', 0.99 );
% legend( h, 'all_min_nodes vs. nu_nodes', 'Power Fit', 'Lower bounds (Power Fit)', 'Upper bounds (Power Fit)', 'Location', 'NorthEast' );
% Label axes
% xlabel nu_nodes
% ylabel all_min_nodes
% grid on

